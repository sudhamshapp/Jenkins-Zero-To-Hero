pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1' //Maven installed as part of docker container
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    // stage('Checkout') {// it's not required becuse jenkinsfile is also resides in the same repo
    //   steps {
    //     sh 'echo passed'
    //     git branch: 'main', url: 'https://github.com/sudhamshapp/Jenkins-Zero-To-Hero.git'
    //   }
    // }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package' //maven is available in the docker image
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://3.129.207.31:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'jenkins-sonar-token', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "sudhamshapp/ultimate-cicd-argocd-of-sudhamsh:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('dockerhub-credentials')
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "dockerhub-credentials") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Update Deployment File') { //here we can either use argo image updater as well as shell scripts but we're using the shell scripts
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "sudhamshapp"
        }
        steps {
            withCredentials([string(credentialsId: 'github-credentials', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "sudhamsh1996@gmail.com"
                    git config user.name "Sudhamsh"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
                // sh '''
                //     git config user.email "sudhamsh1996@gmail.com"
                //     git config user.name "Sudhamsh"

                //     # Pull the latest changes from the main branch to ensure we're working with the latest deployment.yml
                //     git checkout main
                //     git pull https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} main

                //     # Replace the existing image tag version with the latest BUILD_NUMBER
                //     # Format: 'sudhamshapp/ultimate-cicd-argocd-of-sudhamsh:<version>'
                //     sed -i "s/sudhamshapp\\/ultimate-cicd-argocd-of-sudhamsh:[0-9]*/sudhamshapp\\/ultimate-cicd-argocd-of-sudhamsh:${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

                //     # Stage, commit, and push the changes
                //     git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                //     git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                //     git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                // '''            
            
            }
        }
    }
  }
}
